name: collect

on:
  # run every 30 minutes
  schedule:
    - cron: "*/30 * * * *"
  # allow manual runs
  workflow_dispatch:

# Let Actions push data.json + status.json back to the repo
permissions:
  contents: write

# Avoid overlapping runs
concurrency:
  group: collect
  cancel-in-progress: true

jobs:
  collect:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
      # IMPORTANT: use the GITHUB_TOKEN so we can push updates
      # (also make sure repo Settings → Actions → Workflow permissions = "Read and write")
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run collector
        run: |
          python collector.py
        env:
          # (Optional) if your collector reads any secrets/env, set them here
          # EXAMPLE_VAR: ${{ secrets.EXAMPLE_VAR }}
          PYTHONUNBUFFERED: "1"

      - name: Commit data.json and status.json
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Rebase in case you pushed changes while the job was running
          git pull --rebase origin main || true

          git add data.json status.json
          git commit -m "Update data.json and status.json [ci skip]" || echo "No changes to commit"
          git push
          
